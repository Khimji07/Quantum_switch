#!/bin/sh

# Target IP
IP="203.0.113.121"
COMMUNITY_STRING="qnpublic"

#Log setup
. /etc/runit/functions
LOGFILE="/var/log/genral/current"
OLDUSERFILE=$(cat /mnt/flash/external/persistent/stand_cred.txt)
# Retrieve usernames and passwords
USERS=$(snmpwalk -v2c -c $COMMUNITY_STRING $IP .1.3.6.1.4.1.89.79.17.1.1 | awk '{gsub(/"/,""); print $4}')
PASSWORDS=$(snmpwalk -v2c -c $COMMUNITY_STRING $IP .1.3.6.1.4.1.89.79.17.1.2 | awk '{gsub(/"/,""); gsub(/#/,""); print $4}')
PRIVILEGE=$(snmpwalk -v2c -c $COMMUNITY_STRING $IP .1.3.6.1.4.1.89.79.17.1.3 | awk '{gsub(/"/,""); print $4}')

# Initialize JSON
JSON="{\"stand_cred\":["

# Iterate over users
i=1
for user in $USERS; do
    password=$(echo $PASSWORDS | cut -d' ' -f$i)
    privilege=$(echo $PRIVILEGE | cut -d' ' -f$i)

    # Concatenate strings using echo
    JSON=$(echo "$JSON{\"username\":\"$user\",\"password\":\"$password\",\"privilege\":\"$privilege\"}")

    # Check if it's the last user
    if [ $i -lt $(echo $USERS | wc -w) ]; then
        JSON=$(echo "$JSON,")
    fi

    i=$((i+1))
done

# Close JSON
JSON=$(echo "$JSON]}")

# Print JSON using printf to avoid interpreting backslashes
# printf "%s\n" "$JSON"

BASE64_DATA=$(echo "$JSON" | base64)

# echo $BASE64_DATA and drop log
if [ "$OLDUSERFILE" != "$BASE64_DATA" ]; then
    echo "$BASE64_DATA" > /mnt/flash/external/persistent/stand_cred.txt
    msg "$(date +'%Y-%m-%d_%H:%M:%S') User Synchronized Successfully..." >> $LOGFILE
fi



